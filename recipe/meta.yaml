{% set name = "jax-finufft" %}
{% set version = "0.1.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/j/jax-finufft/jax_finufft-{{ version }}.tar.gz
  sha256: 0c9173837fa0ae47b61074f8c05b246d9ca5b21bda6174beda8c27ea75c4f152

build:
  script: {{ PYTHON }} -m pip install . -vv
  number: 3
  skip: True  # [win or py<39]
  script_env:
    # Turn off "-march=native"
    - SKBUILD_CMAKE_ARGS="-DFINUFFT_ARCH_FLAGS="  # [cuda_compiler_version == "None"]
    - SKBUILD_CMAKE_ARGS="-DJAX_FINUFFT_USE_CUDA=ON;-DFINUFFT_ARCH_FLAGS="  # [cuda_compiler_version != "None"]
  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != "None"]
  string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == "None"]

requirements:
  build:
    - python                                    # [build_platform != target_platform]
    - cross-python_{{ target_platform }}        # [build_platform != target_platform]
    - scikit-build-core                         # [build_platform != target_platform]
    - setuptools_scm                            # [build_platform != target_platform]
    - nanobind                                  # [build_platform != target_platform]
    - {{ compiler('cuda') }}                    # [cuda_compiler_version != "None"]
    - {{ stdlib('c') }}
    - {{ compiler('cxx') }}
    - cmake
    - make  # [linux]
  host:
    - nccl                                      # [cuda_compiler_version != "None"]
    - cuda-cupti-dev                            # [(cuda_compiler_version or "").startswith("12")]
    - cuda-cudart-dev                           # [(cuda_compiler_version or "").startswith("12")]
    - cuda-nvml-dev                             # [(cuda_compiler_version or "").startswith("12")]
    - cuda-nvtx-dev                             # [(cuda_compiler_version or "").startswith("12")]
    - libcufft-dev                              # [(cuda_compiler_version or "").startswith("12")]
    - cuda-version {{ cuda_compiler_version }}  # [cuda_compiler_version != "None"]
    - python
    - scikit-build-core
    - setuptools_scm
    - nanobind
    - pip
    - fftw
    - llvm-openmp  # [osx]
    - libgomp  # [linux]
  run:
    - python
    - jax
    - pydantic

test:
  imports:
    - jax_finufft
    - jax_finufft.jax_finufft_cpu
    - jax_finufft.jax_finufft_gpu  # [cuda_compiler_version != "None"]
  requires:
    - pip
  commands:
    - pip check

about:
  home: https://github.com/flatironinstitute/jax-finufft
  license: Apache-2.0
  license_file:
    - LICENSE
    - vendor/finufft/LICENSE
  summary: JAX bindings to the Flatiron Institute Non-uniform Fast Fourier Transform library
  dev_url: https://github.com/flatironinstitute/jax-finufft

extra:
  recipe-maintainers:
    - dfm
    - lgarrison
